import 'stdio' as stdio
import 'libuv' as {set, get}

int number = 64_000
flt number = 64.000

str string = 'hello'
obj object = {int int = 0, str str = ''}
var nilptr = null
var rawptr = {1024}
var strnum = true ? 'str' : 64

str[1] array = ['hello']
str[2] array = ['hello', 'world']

fun fib int n {
	return n <= 1 ? n : fib(n - 1) + fib(n - 2)
}

fun man ...arguments {
	return sizeof arguments
}

obj run = {
	obj global = []
	ptr memory = {1024}

	fun create type, value {
		var val = {type * value}
		var ret = super.excute()

		if val.ref == 0 {
			super.destroy(typeof val, val)
		}
	}
}

def map {
	get key {}
	set key, value {}
}

def vec flt x, flt y, flt z

fun dot obj[vec] a, obj[vec] b {
	return a.x * b.x + a.y * b.y + a.z * b.z
}

dot(vec(1, 2, 3), vec(4, 5, 6))

dot(fun a, b{
	return dot(fun c, d => a * b * c * d)
})
